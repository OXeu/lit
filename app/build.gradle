ext {
	VersionName = '3.1.6.2'
	VersionCode = 200914
}
apply plugin: 'com.android.application'
android {
	signingConfigs {
		app {
			storeFile file('.\\zmide.jks')
			storePassword '***REMOVED***'
			keyAlias = 'zmide'
			keyPassword '***REMOVED***'
		}
	}
	packagingOptions{
		exclude 'META-INF/androidx.vectordrawable_vectordrawable.version'
	}
	android.applicationVariants.all {
		variant ->
			variant.outputs.all {
				output ->
							output.outputFileName = "release.apk"
							("issue/apk")
			}
	}
	/*
	applicationVariants.all { variant ->
		variant.outputs.all {
			output ->
				outputFileName = outputFile.name.replace(".apk",".apk")
			println "========" + outputFile.name
			if (outputFileName != null && outputFile.name.endsWith('.apk')) {
				if (!outputFile.name.contains("debug")) {
					variant.getPackageApplicationProvider().get().outputDirectory = new File("issue/apk")
					println "========" + variant.getPackageApplication().outputDirectory
					outputFileName = "release.apk"
					variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach {
						apkData -> apkData.outputFileName = outputFileName
					}
				}
			}
		}
	}*/
    // 修改APK生成路径及名称
    applicationVariants.all { variant ->
        // 根据版本号修改apk生成子目录
        def apkDir = new File("issue/apk")
        // apk生成根目录
            // Android Studio 3.0
            // variant.getPackageApplication().outputDirectory = apkDir
            // Android Studio 3.3
            variant.getPackageApplicationProvider().get().outputDirectory = apkDir
        

        // apk生成文件名
        variant.outputs.all { output ->
            outputFileName = "release.apk"
        }
    }
	tasks.whenTaskAdded {
		task ->
			//我只需要assembleFlavorBProductRelease这个task（正式环境打包发布的情况下）才保存mapping.txt
			//规则可以自己定义，我这边定义的比较宽泛
			if (task.name.startsWith("assemble")
			) {
				task.doLast {
					println "\n\n=====mapping.txt======"
					println task.name
					copyMapping()
					
				}
			}
	}
	 
	compileSdkVersion 29
	buildToolsVersion "29.0.3"
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
	
	defaultConfig {
		applicationId "com.zmide.lit"
		minSdkVersion 21
		targetSdkVersion 29
		versionCode VersionCode
		versionName VersionName
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		flavorDimensions "channel"
	}
	buildTypes {
		release {
			//对齐
			zipAlignEnabled true
			//移除无用的resource文件
			shrinkResources true
			minifyEnabled true
			signingConfig signingConfigs.app
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			versionNameSuffix = '(Dev)'
			debuggable = true
			signingConfig signingConfigs.app
		}
	}
	buildFeatures {
		dataBinding true
	}
	
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation 'org.jsoup:jsoup:1.13.1'
	implementation 'com.oasisfeng.condom:library:2.5.0'
	//implementation 'com.ifreedomer:com.ifreedomer.permissionhelper:1.0.7'
	implementation 'com.zhy:okhttputils:2.0.0'
	implementation 'androidx.recyclerview:recyclerview:1.1.0'
	implementation 'androidx.cardview:cardview:1.0.0'
	//noinspection GradleDependency
	implementation 'com.umeng.umsdk:analytics:8.1.6'
	implementation 'com.umeng.umsdk:common:2.2.5'
	implementation 'com.blankj:utilcodex:1.26.0'
	implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
	implementation 'androidx.viewpager:viewpager:1.0.0'
	testImplementation 'junit:junit:4.13'
	androidTestImplementation 'androidx.test.ext:junit:1.1.1'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
	//implementation 'org.adblockplus:adblock-android-settings:3.0'
	//implementation 'org.adblockplus:adblock-android-webview:3.0'
	implementation 'com.shuyu:gsyVideoPlayer-java:7.1.3'
	implementation 'com.google.android.material:material:1.2.0'
	implementation 'com.github.hackware1993:MagicIndicator:1.5.0'
	implementation "androidx.documentfile:documentfile:1.0.1"
	//implementation 'com.shuyu:gsyVideoPlayer-arm64:7.1.3'
	//implementation project(':hooklib')
	//implementation project(':xposedcompat')

}

static def releaseTime() {
	return new Date().format("HHmm", TimeZone.getTimeZone("GMT+08:00"))
}


def copyMapping() {
	copy {
		
		//此处是个人喜好，把assembleFlavorBProductRelease先去掉assemble和Release，否则感觉文件名太长
		//然后把FlavorBProduct然后的F改成小写
		/*
		String firstChar = "";
		try {
			firstChar = name.getAt(0);
		} catch (Exception e) {
			e.printStackTrace()
			return
		}*/
		//name = name.replace(firstChar, firstChar.toLowerCase())
		//======================================================
		
		
		String renameName = "mapping_" + VersionName+ ".txt"
		println "\n=====FileName:" + renameName + "======\n"
		from "$buildDir" + '/outputs/mapping/' + 'release/'
		include "mapping.txt"
		into "issue/mapping/"
		rename {
			renameName
		}
		/*
		String appName = "lit_" + VersionName+ ".apk"
		println "\n=====apkName:" + appName + "======\n"
		from "$buildDir" + '/release/'
		include "app-release.apk"
		into "issue/apk/"
		rename {
			appName
		}*/
	}
}
